{"version":3,"sources":["App.js","parse-logs.js","ResultTable.js","Summary.js","FileSelect.js","reportWebVitals.js","index.js"],"names":["window","jQuery","$","global","App","className","Component","_","require","module","exports","getLogData","logs","playerName","parsedLogs","trim","replace","JSON","parse","parseLogs","myDeaths","otherDeaths","playerNums","playerDeaths","playerRaids","players","key","forEach","log","p","toLowerCase","playerNumber","row","tempPlayers","clone","otherPlayers","remove","x","o","calcDeaths","push","name","total","deaths","averageDeaths","toFixed","console","totalRaids","length","otherPlayerDeaths","ResultTable","props","toggleDirection","column","direction","state","setState","previousState","getSortedRanking","ranking","data","sortBy","reverse","this","Table","sortable","celled","fixed","unstackable","Header","Row","HeaderCell","sorted","onClick","Icon","Body","styles","map","tableData","Cell","Grid","columns","Column","width","textAlign","summary","FileSelect","selectedFileName","rsn","uploadFile","bind","setRSN","resetState","event","value","parsedData","undefined","selectedFile","forceUpdate","target","files","file","reader","FileReader","scope","onload","result","readAsText","buttonProps","disabled","as","icon","circular","Content","centered","ui","grid","GridRow","GridColumn","Input","placeholder","onChange","InputFile","button","input","id","accept","Button","animated","hidden","visible","Summary","React","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc27f42d.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport FileSelect from \"./FileSelect\";\nimport $ from 'jquery';\n\nwindow.jQuery = $;\nwindow.$ = $;\nglobal.jQuery = $;\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <FileSelect/>\n      </div>\n    );\n  }\n}\n\nexport default App;","var _ = require('lodash');\n\nconst parseLogs = (logs) => {\n  logs = logs.trim();\n  logs = logs.replace(/\\n/g, ',\\n')\n  logs = '[' + logs + ']';\n\n  return JSON.parse(logs);\n};\n\n// const getMyDrops = (logs) => {\n//\n//   data.forEach(d => {\n//     i++;\n//     if(d.specialLootReceiver == \"\")\n//       console.log(i + \" \" + d.specialLoot)\n//   });\n// }\n\nconst getLogData = (logs, playerName) => {\n  let parsedLogs = parseLogs(logs);\n  let myDeaths = 0;\n  let otherDeaths = 0;\n\n  const playerNums = [1, 2, 3, 4, 5];\n  let playerDeaths = {};\n  let playerRaids = {};\n  let players = [];\n\n  const calcDeaths = (playerNumber, row) => {\n    var tempPlayers = _.clone(playerNums);\n    let otherPlayers = _.remove(tempPlayers, (x) => {\n      return x !== playerNumber\n    });\n\n    myDeaths += row['tobPlayer' + playerNumber + 'DeathCount'];\n    otherPlayers.forEach(o => {\n\n      if (row['tobPlayer' + o]) {\n        if (playerDeaths[row['tobPlayer' + o]]) {\n          playerDeaths[row['tobPlayer' + o]] += row['tobPlayer' + o + 'DeathCount'];\n        } else {\n          playerDeaths[row['tobPlayer' + o]] = 1;\n        }\n        if (playerRaids[row['tobPlayer' + o]]) {\n          playerRaids[row['tobPlayer' + o]]++;\n        } else {\n          playerRaids[row['tobPlayer' + o]] = 1;\n        }\n      }\n\n      otherDeaths += row['tobPlayer' + o + 'DeathCount']\n    })\n  };\n\n  parsedLogs.forEach(log => {\n    playerNums.forEach(p => {\n      if (log['tobPlayer' + p].toLowerCase() === playerName.toLowerCase()) {\n        calcDeaths(p, log)\n      }\n    });\n  });\n\n  for (var key in playerDeaths) {\n    players.push({\n      name: key,\n      total: playerRaids[key],\n      deaths: playerDeaths[key],\n      averageDeaths: (playerDeaths[key] / playerRaids[key]).toFixed(2)\n    })\n  }\n  console.log(parsedLogs);\n  return {\n    totalRaids: parsedLogs.length,\n    deaths: myDeaths,\n    averageDeaths: (myDeaths/parsedLogs.length).toFixed(2),\n    otherPlayerDeaths: otherDeaths,\n    otherPlayers: players}\n};\n\n\nmodule.exports.getLogData = getLogData;","import React, {Component} from 'react';\nimport {Icon, Table} from \"semantic-ui-react\";\nimport _ from \"lodash\";\n\nclass ResultTable extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      column: 'total',\n      direction: {\n        name: 'ascending',\n        total: 'descending',\n        deaths: 'ascending',\n        averageDeaths: 'ascending'\n      }\n    };\n  }\n\n  toggleDirection = column => {\n    const direction = this.state.direction[column];\n    this.setState(previousState => {\n      return {\n        ...previousState,\n        column: column,\n        direction: {\n          ...previousState.direction,\n          [column]: direction === 'ascending' ? 'descending' : 'ascending'\n        }\n      };\n    });\n  };\n\n  getSortedRanking = (ranking, column, direction) => {\n    let data = _.sortBy(ranking, column);\n    if (direction === 'descending') {\n      data.reverse();\n    }\n    return data;\n  };\n\n  render() {\n    const {column, direction} = this.state;\n    return (\n      <Table sortable celled fixed unstackable>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell\n              sorted={column === 'name' ? direction.name : null}\n              onClick={() => this.toggleDirection('name')}\n            >\n              <Icon name=\"trophy\"/>Name\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === 'total' ? direction.total : null}\n              onClick={() => this.toggleDirection('total')}\n            >\n              <Icon name=\"user\"/>Total Raids\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === 'deaths' ? direction.deaths : null}\n              onClick={() => this.toggleDirection('deaths')}\n            >\n              <Icon name=\"star\"/>Deaths\n            </Table.HeaderCell>\n            <Table.HeaderCell\n              sorted={column === 'averageDeaths' ? direction.averageDeaths : null}\n              onClick={() => this.toggleDirection('averageDeaths')}\n            >\n              <Icon name=\"bomb\"/>Average Deaths\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body styles={{'max-height': '85vh'}}>\n          {_.map(\n            this.getSortedRanking(this.props.tableData, column, direction[column]),\n            ({name, total, deaths, averageDeaths}) => (\n              <Table.Row key={name}>\n                <Table.Cell>{name}</Table.Cell>\n                <Table.Cell>{total}</Table.Cell>\n                <Table.Cell>{deaths}</Table.Cell>\n                <Table.Cell>{averageDeaths}</Table.Cell>\n              </Table.Row>\n            )\n          )}\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\nexport default ResultTable","import React, {Component} from 'react';\nimport {Grid} from \"semantic-ui-react\";\n\nclass ResultTable extends Component {\n  render() {\n    return (<Grid columns={2}>\n      <Grid.Row>\n        <Grid.Column width={8} textAlign={\"right\"}>\n          <b>Total Raids</b>\n        </Grid.Column>\n        <Grid.Column width={8}>\n          {this.props.summary.totalRaids}\n        </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row>\n        <Grid.Column width={8}  textAlign={\"right\"}>\n          <b>Total Deaths</b>\n        </Grid.Column>\n        <Grid.Column width={8}>\n          {this.props.summary.deaths}\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column width={8}  textAlign={\"right\"}>\n          <b>Average Deaths</b>\n        </Grid.Column>\n        <Grid.Column width={8}>\n          {this.props.summary.averageDeaths}\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row>\n        <Grid.Column width={8}  textAlign={\"right\"}>\n          <b>Other Player Deaths</b>\n        </Grid.Column>\n        <Grid.Column width={8}>\n          {this.props.summary.otherPlayerDeaths}\n        </Grid.Column>\n      </Grid.Row>\n\n    </Grid>)\n  }\n}\n\nexport default ResultTable","import React from 'react';\nimport {InputFile} from 'semantic-ui-react-input-file'\nimport {getLogData} from \"./parse-logs\";\nimport {Button, Grid, GridColumn, GridRow, Header, Icon, Input} from \"semantic-ui-react\";\nimport ResultTable from \"./ResultTable\";\nimport Summary from \"./Summary\";\n\nclass FileSelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {selectedFileName: 'None', rsn: ''};\n    this.uploadFile = this.uploadFile.bind(this);\n    this.setRSN = this.setRSN.bind(this);\n    this.resetState = this.resetState.bind(this);\n  }\n\n  setRSN(event, data) {\n    this.setState({rsn: data.value});\n  }\n\n  resetState(event) {\n    this.setState({selectedFileName: 'None', rsn: '', parsedData: undefined, selectedFile: undefined, });\n    this.forceUpdate()\n  }\n\n  uploadFile(event) {\n    this.setState({selectedFileName: event.target.files[0].name, selectedFile: event.target.files[0]});\n\n    var file = event.target.files[0];\n    var reader = new FileReader();\n    const scope = this;\n    reader.onload = function (event) {\n      scope.setState({parsedData: getLogData(event.target.result, scope.state.rsn)});\n    };\n\n    reader.readAsText(file);\n  }\n\n  render() {\n    let buttonProps = {disabled: !this.state.rsn};\n\n    return (<>\n      <Header as='h2' icon textAlign='center'>\n        <Icon name='cogs' circular/>\n        <Header.Content>ToB Parser</Header.Content>\n      </Header>\n      <Grid centered columns={2} ui grid>\n        <GridRow>\n          <GridColumn textAlign={\"right\"}>\n            <Input placeholder='Enter RSN...' value= {this.state.rsn} onChange={this.setRSN}/>\n          </GridColumn>\n          <GridColumn>\n            <InputFile\n              button={{...buttonProps}}\n              input={{\n                id: 'input-control-id',\n                accept: \".log\",\n                onChange: this.uploadFile.bind(this)\n              }}\n            />\n            <Button animated='vertical' onClick={this.resetState}>\n              <Button.Content hidden>Reset</Button.Content>\n              <Button.Content visible>\n                <Icon name='redo'/>\n              </Button.Content>\n            </Button>\n          </GridColumn>\n        </GridRow>\n        {this.state.parsedData && <Summary summary={this.state.parsedData}/>}\n        {this.state.parsedData && <ResultTable tableData={this.state.parsedData.otherPlayers}/>}\n      </Grid>\n    </>)\n  }\n}\n\nexport default FileSelect","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}